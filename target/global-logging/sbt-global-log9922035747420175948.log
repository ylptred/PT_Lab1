[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ylptr\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ylptr\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.0 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 150.7722ms
[debug]       Load.loadUnit: defsScala took 0.5091ms
[debug] [Loading] Scanning directory C:\Users\ylptr\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ylptr\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.2869 ms
[debug]           Load.resolveProject(global-plugins) took 60.9823ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ylptr\.sbt\1.0\plugins, plugins: List(<none>))) took 118.5765ms
[debug] [Loading] Done in C:\Users\ylptr\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 152.9952ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5053ms
[debug]     Load.loadUnit(file:/C:/Users/ylptr/.sbt/1.0/plugins/, ...) took 318.8026ms
[debug]   Load.apply: load took 608.4559ms
[debug]   Load.apply: resolveProjects took 7.7925ms
[debug]   Load.apply: finalTransforms took 91.1023ms
[debug]   Load.apply: config.delegates took 12.8915ms
[debug]   Load.apply: Def.make(settings)... took 665.6839ms
[debug]   Load.apply: structureIndex took 146.0524ms
[debug]   Load.apply: mkStreams took 2.219ms
[info] loading global plugins from C:\Users\ylptr\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4002.0856ms
[debug]           Load.loadUnit: plugins took 29.9153ms
[debug]           Load.loadUnit: defsScala took 0.0139ms
[debug] [Loading] Scanning directory D:\ЖаваБИ\untitled\project
[debug]             Load.loadUnit: mkEval took 10.6274ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ЖаваБИ\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2399 ms
[info] loading settings for project untitled-build from idea.sbt ...
[debug]               Load.resolveProject(untitled-build) took 21.553ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: D:\ЖаваБИ\untitled\project, plugins: List(<none>))) took 25.663ms
[debug] [Loading] Done in D:\ЖаваБИ\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 244.7767ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.0779ms
[debug]         Load.loadUnit(file:/D:/ЖаваБИ/untitled/project/, ...) took 283.2739ms
[debug]       Load.apply: load took 285.6725ms
[debug]       Load.apply: resolveProjects took 0.2591ms
[debug]       Load.apply: finalTransforms took 57.1266ms
[debug]       Load.apply: config.delegates took 0.6949ms
[debug]       Load.apply: Def.make(settings)... took 567.2261ms
[debug]       Load.apply: structureIndex took 157.5755ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from D:\ЖаваБИ\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1851.3532ms
[debug]     Load.loadUnit: defsScala took 0.0077ms
[debug] [Loading] Scanning directory D:\ЖаваБИ\untitled
[debug]       Load.loadUnit: mkEval took 0.5228ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.3656 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 46.1191ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\ЖаваБИ\untitled, plugins: List(<none>))) took 54.8783ms
[debug] [Loading] Done in D:\ЖаваБИ\untitled, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 5342.5663ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.6127ms
[debug]   Load.loadUnit(file:/D:/ЖаваБИ/untitled/, ...) took 7215.8545ms
[debug] Load.apply: load took 7219.7999ms
[debug] Load.apply: resolveProjects took 0.1676ms
[debug] Load.apply: finalTransforms took 65.3797ms
[debug] Load.apply: config.delegates took 0.5875ms
[debug] Load.apply: Def.make(settings)... took 93.3003ms
[debug] Load.apply: structureIndex took 33.9016ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to PT_Lab1 (in build file:/D:/ЖаваБИ/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50696 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50696, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to PT_Lab1 (in build file:/D:/ЖаваБИ/untitled/)
[debug] > Exec(idea-shell, None, None)
